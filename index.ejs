<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>W chat</title>
        <link rel="stylesheet" type="text/css" href="/styles.css">
        <link rel="icon" type="image/png" href="https://raw.githubusercontent.com/EhogGawlic/w-chat/refs/heads/main/public/favicon.png">
    </head>
    <body>
        <audio id="btnclick" class="hidden">
            <source src="https://raw.githubusercontent.com/EhogGawlic/w-chat/refs/heads/main/public/click.mp3" type="audio/mpeg">
            Your browser does not support the audio element.
        </audio>
        <div class = "box" id="topbox">W CHAT <button onclick="window.location='/games'" style="height: 80px; right:430px;">Games</button><button id="chatj" style="height: 80px;">Join chat</button><button id="si" style="height: 80px;">Sign in</button></div>
        <div class = "box" id="leftbox"> <span id="usr" style="display: none;">Logged in as <%= usr %> <button onclick="window.location = '/user:name=<%= usr %>'">Go to user page</button></span>
            <div id="posts"><%- posts %></div>
        </div>
        <div class = "box" id="rightbox"> 
            <!--messages (private)-->
            <!--tabs for groups/people-->
            
            <div class="box" id="contacts">
                <%- contacts %>
            </div>
            <div id="chatdiv" style="position: absolute;top: 0;left: 50px;right: 0;text-align: center;height: 75px;background-color: lightgray;">
                 <span id="currentchat" style="font-size: 30pxt;">e</span>
                 <button id="chatedit"><img src="/edit.png" style="position: relative;top: -2.5px;left: -7.5px;"></button>
            </div>
            <div class="box" id="messages">
            </div>
            <div id="chatinp">
                &nbsp;&nbsp;&nbsp;&nbsp;<input type="text" id="chatinput" multiple placeholder="Type a message...">
                <button id="chatsend">Send</button>
            </div>
         </div><button id="post" style="height: 80px;display: none;">+</button>
        <div class="box" id="newchatbox" style="display: none;">
            <form id="newchatform">
                Create new chat with: <input type="text" id="newchatnames" placeholder="username1, username2, ...">
                <button type="button" id="adduser">Add user</button><br>
                Users:
                <ul id="ncusers"></ul><br>
                <button type="submit" id="cchatbtn">Create</button>
            </form>
        </div>
        <div id="bottombar">
            <img src="./btmbar1.png" id="btmbar1">
            <img src="./btmbar2.png" id="btmbar2">
            <img src="./btmbar3.png" id="btmbar3">
            <img src="./btmbar4.png" id="btmbar4">
        </div>
        <script>
            //phone mode
            Array.from(document.querySelectorAll('button')).forEach(btn => {
                btn.addEventListener("click", ()=> {
                    document.getElementById("btnclick").play();
                })
            });
                        chatedit.onclick = function() {
                const newname = prompt("Enter new chat name (leave blank to keep current):");
                if (newname === null) return;
                fetch('/editchatname', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({newname, contact: currentContact})
                }).then(res => res.text()).then(data => {
                    if (data.startsWith("Error:")) {
                        alert(data);
                        return;
                    }
                    localStorage.setItem("currentContact", newname);
                    alert("Chat name updated to " + newname);
                    document.getElementById("currentchat").innerText = newname;
                    location.reload();
                });
            }
            if (innerHeight>innerWidth){
                    document.getElementById("leftbox").style.right = "0";
                    document.getElementById("leftbox").style.bottom = "50%";
                    document.getElementById("rightbox").style.left = "0";
                    document.getElementById("rightbox").style.top = "50%";
                    document.getElementById("rightbox").style.bottom = "50px";
                    document.getElementById("rightbox").style.right = "0";
                } else {
                    document.getElementById("leftbox").style.right = "50%";
                    document.getElementById("leftbox").style.bottom = "10px";
                    document.getElementById("rightbox").style.left = "50%";
                    document.getElementById("rightbox").style.top = "120px";
                    document.getElementById("rightbox").style.bottom = "10px";
                    document.getElementById("rightbox").style.right = "0";
                }
            window.onresize = function(){
                if (innerHeight>innerWidth){
                    document.getElementById("leftbox").style.right = "0";
                    document.getElementById("leftbox").style.bottom = "50%";
                    document.getElementById("rightbox").style.left = "0";
                    document.getElementById("rightbox").style.top = "50%";
                    document.getElementById("rightbox").style.bottom = "0";
                    document.getElementById("rightbox").style.right = "0";
                } else {
                    document.getElementById("leftbox").style.right = "50%";
                    document.getElementById("leftbox").style.bottom = "10px";
                    document.getElementById("rightbox").style.left = "50%";
                    document.getElementById("rightbox").style.top = "120px";
                    document.getElementById("rightbox").style.bottom = "10px";
                    document.getElementById("rightbox").style.right = "0";
                }
            }

            function imageifydriveimg(url){
                //https://drive.google.com/file/d/11VC7HFQjrrguIDUvN0lWJx4HA393CW0E/view?usp=sharing
                const id = url.split('/d/')[1].split('/view')[0];
                return `https://drive.google.com/thumbnail?id=${id}&sz=w320-h320`;
            }
            let currentContact = localStorage.getItem("currentContact") || null;
            document.getElementById("currentchat").innerText = currentContact ? currentContact : "No chat selected";
            if (currentContact) {
                fetch('/messages', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({contact: currentContact})
                }).then(res => res.text()).then(data => {
                    document.getElementById("messages").innerHTML = data
                    setTimeout(()=>{
                        const messagesDiv = document.getElementById("messages");
                        messagesDiv.scrollTop = messagesDiv.scrollHeight;
                    }, 2000)
                });
            }/*function showChatNotification(title, body) {
    if (document.hasFocus()) return; // Only notify if not focused
    if (Notification.permission === "granted") {
        new Notification(title, { body });
    }
}

// Example: Show notification when new messages are fetched
function fetchMessagesAndNotify() {
    fetch('/messages', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        credentials: 'include',
        body: JSON.stringify({ contact: currentContact })
    }).then(res => res.text()).then(data => {
        // Compare with previous messages if needed
        if (document.getElementById("messages").innerHTML == data) return
        document.getElementById("messages").innerHTML = data;
        // Example: Always notify (customize as needed)
        showChatNotification("New message", "You have a new message!");

        // Scroll to bottom
        const messagesDiv = document.getElementById("messages");
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    });*/
            setInterval(()=>{
                //fetchMessagesAndNotify()
                });
                fetch('/allposts', {
                    method: 'GET',
                        credentials: 'include'
                }).then(res => res.text()).then(data => {
                    document.getElementById("posts").innerHTML = data
                    document.querySelectorAll('.post').forEach(post => {
                    post.style.cursor = 'pointer';
                        const id = parseInt(post.id);
                        console.log("id"+id)
                    post.onclick = function() {
                        console.log( `/post:id=${id}`)
                        window.location.href = `/post:id=${id}`;

                    };
                });
            }, 10000);
            Array.from(document.getElementsByClassName("contact")).forEach(contact=>{
            contact.onclick = function() {
                if (this.id === "newc") {
                    let names = []
                    try{
                    names.push("<%= usr %>")
                    } catch(e){
                        names.push("ඞඞඞ mason 67\\\\\\")
                    }
                    document.getElementById("newchatbox").style.display = "block";
                    document.getElementById("adduser").onclick = function() {
                        const newname = document.getElementById("newchatnames").value.trim();
                        if (newname === '' || names.includes(newname)) return;
                        names.push(newname);
                        const li = document.createElement("li");
                        li.textContent = newname;
                        document.getElementById("ncusers").appendChild(li);
                        document.getElementById("newchatnames").value = '';
                    };
                    document.getElementById("newchatform").onsubmit = function(e) {
                        e.preventDefault();
                        document.getElementById("newchatbox").style.display = "none";
                        const cname = prompt("Enter a name for the chat (optional):");
                        if (cname === null) return;
                        fetch('/newchat', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            credentials: 'include',
                            body: JSON.stringify({contacts: names, cname})
                        }).then(res => res.text()).then(data => {
                            if (data.startsWith("Error:")) {
                                alert(data);
                                return;
                            }
                            alert("yay! chat created, reloading to show it");
                            location.reload();
                        });
                    }
                    return;
                }
                fetch('/messages', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({contact: this.id.slice(7)})
                }).then(res => res.text()).then(data => {
                    document.getElementById("messages").innerHTML = data
                    currentContact = this.id.slice(7)
                    localStorage.setItem("currentContact", currentContact);
                    document.getElementById("currentchat").innerText = currentContact
                    setTimeout(()=>{
                        const messagesDiv = document.getElementById("messages");
                        messagesDiv.scrollTop = messagesDiv.scrollHeight;
                    }, 2000)
                });
            }});
            document.getElementById("chatsend").onclick = function() {
                const message = document.getElementById("chatinput").value
                if(message.trim() === '') return;
                fetch('/sendmessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify({message: message, contact: currentContact})
                }).then(res => res.text()).then(data => {
                    document.getElementById("messages").innerHTML = data
                    document.getElementById("chatinput").value = ''
                });
            };
            document.getElementById("chatj").onclick = function() {
                window.location.href = "/chatjoin";
            };
            document.getElementById("si").onclick = function() {
                window.location.href = "/signin";
            };
            if (<%= loggedin %>) {
                document.getElementById("post").style.display = "block";
                document.getElementById("usr").style.display = "block";
            }
            document.getElementById("post").onclick = function() {
                window.location.href = "/post";
            };
            document.querySelectorAll('.post').forEach(post => {
                post.style.cursor = 'pointer';
                    const id = parseInt(post.id);
                    console.log("id"+id)
                post.onclick = function() {
                    console.log( `/post:id=${id}`)
                    window.location.href = `/post:id=${id}`;

                };
            });
        </script>
    </body>

</html>